
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Stash Logistics - Marketplace</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --porter-blue: #0C5BEF;
      --porter-blue-light: #E7F0FF;
      --porter-orange: #F76F00;
      --porter-orange-light: #FFF0E6;
      --porter-dark: #1A1A1A;
      --porter-gray: #4D4D4D;
      --porter-light-gray: #999999;
      --porter-bg: #F8F9FF;
      --porter-white: #FFFFFF;
      --porter-border: #E0E0E0;
      --porter-green: #00A651;
      --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.05);
      --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.04);
      --font-main: 'Inter', sans-serif;
      --border-radius: 8px;
      --border-radius-lg: 16px;
      --transition: all 0.3s ease;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: var(--font-main);
      background-color: var(--porter-bg);
      color: var(--porter-dark);
      line-height: 1.6;
      overflow-x: hidden;
      -webkit-font-smoothing: antialiased;
    }

    /* Header Styles */
    header {
      background-color: var(--porter-white);
      box-shadow: var(--shadow-sm);
      position: sticky;
      top: 0;
      z-index: 100;
      transition: var(--transition);
    }

    .header-container {
      max-width: 1280px;
      margin: 0 auto;
      padding: 1rem 1.5rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .logo-icon {
      background: var(--porter-blue);
      padding: 0.5rem;
      border-radius: var(--border-radius);
      color: white;
      font-size: 1.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .logo h1 {
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--porter-blue);
    }

    .header-nav {
      display: flex;
      align-items: center;
      gap: 2rem;
    }

    .nav-links {
      display: flex;
      gap: 1.5rem;
      list-style: none;
    }

    .nav-links a {
      text-decoration: none;
      color: var(--porter-gray);
      font-weight: 500;
      transition: var(--transition);
      padding: 0.5rem;
    }

    .nav-links a:hover, .nav-links a.active {
      color: var(--porter-blue);
    }

    .header-actions {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .btn {
      padding: 0.7rem 1.5rem;
      border-radius: var(--border-radius);
      font-weight: 600;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: var(--transition);
      cursor: pointer;
      border: none;
      font-size: 0.95rem;
      font-family: var(--font-main);
    }

    .btn-primary {
      background: var(--porter-blue);
      color: white;
    }

    .btn-primary:hover {
      background: #0A4FD0;
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }

    .btn-outline {
      background: transparent;
      color: var(--porter-blue);
      border: 1px solid var(--porter-blue);
    }

    .btn-outline:hover {
      background: var(--porter-blue-light);
    }

    .btn-orange {
      background: var(--porter-orange);
      color: white;
    }

    .btn-orange:hover {
      background: #E66600;
    }

    /* Mobile Menu */
    .mobile-menu-btn {
      display: none;
      background: none;
      border: none;
      font-size: 1.5rem;
      color: var(--porter-gray);
      cursor: pointer;
      padding: 0.5rem;
    }

    /* Hero Section */
    .hero {
      background: linear-gradient(135deg, var(--porter-blue) 0%, #0A4FD0 100%);
      color: white;
      padding: 4rem 0;
      text-align: center;
    }

    .hero-container {
      max-width: 1280px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }

    .hero h1 {
      font-size: 3rem;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    .hero p {
      font-size: 1.25rem;
      margin-bottom: 2rem;
      opacity: 0.9;
    }

    .search-bar {
      max-width: 600px;
      margin: 0 auto;
      display: flex;
      background: white;
      border-radius: var(--border-radius-lg);
      padding: 0.5rem;
      box-shadow: var(--shadow-lg);
    }

    .search-input {
      flex: 1;
      border: none;
      padding: 1rem;
      font-size: 1rem;
      color: var(--porter-dark);
      border-radius: var(--border-radius);
    }

    .search-input:focus {
      outline: none;
    }

    .search-btn {
      background: var(--porter-orange);
      border: none;
      padding: 1rem 2rem;
      border-radius: var(--border-radius);
      color: white;
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
    }

    .search-btn:hover {
      background: #E66600;
    }

    /* Filters */
    .filters-section {
      background: white;
      padding: 2rem 0;
      border-bottom: 1px solid var(--porter-border);
    }

    .filters-container {
      max-width: 1280px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }

    .filters-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .filter-group {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .filter-label {
      font-weight: 500;
      color: var(--porter-gray);
      font-size: 0.9rem;
    }

    .filter-select {
      padding: 0.75rem;
      border: 1px solid var(--porter-border);
      border-radius: var(--border-radius);
      font-family: var(--font-main);
      background: white;
      cursor: pointer;
    }

    .active-filters {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
      margin-top: 1rem;
    }

    .filter-tag {
      background: var(--porter-blue-light);
      color: var(--porter-blue);
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-size: 0.85rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .filter-tag .remove {
      cursor: pointer;
      font-weight: bold;
    }

    /* Services Grid */
    .services-section {
      padding: 3rem 0;
    }

    .services-container {
      max-width: 1280px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .section-title {
      font-size: 2rem;
      font-weight: 700;
      color: var(--porter-dark);
    }

    .sort-dropdown {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .sort-dropdown select {
      padding: 0.5rem 1rem;
      border: 1px solid var(--porter-border);
      border-radius: var(--border-radius);
      background: white;
      cursor: pointer;
    }

    .services-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 2rem;
    }

    .service-card {
      background: white;
      border-radius: var(--border-radius-lg);
      padding: 1.5rem;
      box-shadow: var(--shadow-md);
      transition: var(--transition);
      border: 1px solid var(--porter-border);
      position: relative;
      overflow: hidden;
    }

    .service-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-xl);
    }

    .service-badge {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: var(--porter-green);
      color: white;
      padding: 0.25rem 0.75rem;
      border-radius: 50px;
      font-size: 0.75rem;
      font-weight: 600;
    }

    .service-header {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .service-icon {
      width: 60px;
      height: 60px;
      background: var(--porter-blue-light);
      border-radius: var(--border-radius);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      color: var(--porter-blue);
      flex-shrink: 0;
    }

    .service-info h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: var(--porter-dark);
    }

    .service-provider {
      color: var(--porter-gray);
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
    }

    .service-rating {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .stars {
      color: #FFB800;
    }

    .rating-text {
      font-size: 0.85rem;
      color: var(--porter-gray);
    }

    .service-details {
      margin: 1.5rem 0;
    }

    .detail-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.75rem;
      font-size: 0.9rem;
    }

    .detail-label {
      color: var(--porter-gray);
    }

    .detail-value {
      font-weight: 500;
      color: var(--porter-dark);
    }

    .service-features {
      margin: 1rem 0;
    }

    .features-list {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .feature-tag {
      background: var(--porter-bg);
      color: var(--porter-gray);
      padding: 0.25rem 0.75rem;
      border-radius: 50px;
      font-size: 0.8rem;
    }

    .service-pricing {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin: 1.5rem 0;
      padding: 1rem;
      background: var(--porter-bg);
      border-radius: var(--border-radius);
    }

    .price-info {
      display: flex;
      flex-direction: column;
    }

    .price {
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--porter-blue);
    }

    .price-note {
      font-size: 0.8rem;
      color: var(--porter-gray);
    }

    .service-actions {
      display: flex;
      gap: 0.75rem;
    }

    .btn-sm {
      padding: 0.5rem 1rem;
      font-size: 0.85rem;
    }

    /* Quick Quote Section */
    .quick-quote {
      background: white;
      padding: 2rem;
      border-radius: var(--border-radius-lg);
      box-shadow: var(--shadow-md);
      margin: 2rem 0;
    }

    .quote-form {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
    }

    .form-group {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .form-label {
      font-weight: 500;
      color: var(--porter-gray);
      font-size: 0.9rem;
    }

    .form-input {
      padding: 0.75rem;
      border: 1px solid var(--porter-border);
      border-radius: var(--border-radius);
      font-family: var(--font-main);
    }

    .form-input:focus {
      outline: none;
      border-color: var(--porter-blue);
      box-shadow: 0 0 0 3px rgba(12, 91, 239, 0.15);
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .header-nav {
        display: none;
      }

      .mobile-menu-btn {
        display: block;
      }

      .hero h1 {
        font-size: 2rem;
      }

      .hero p {
        font-size: 1rem;
      }

      .search-bar {
        flex-direction: column;
        gap: 0.5rem;
      }

      .filters-grid {
        grid-template-columns: 1fr;
      }

      .services-grid {
        grid-template-columns: 1fr;
      }

      .section-header {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
      }

      .service-actions {
        flex-direction: column;
      }

      .quote-form {
        grid-template-columns: 1fr;
      }
    }

    /* Loading Animation */
    .loading {
      text-align: center;
      padding: 2rem;
      color: var(--porter-gray);
    }

    .spinner {
      border: 3px solid var(--porter-border);
      border-top: 3px solid var(--porter-blue);
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 0 auto 1rem;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Animations */
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .fade-in {
      animation: fadeIn 0.4s ease-out;
    }
  </style>
</head>
<body>
  <!-- Header -->
  <header>
    <div class="header-container">
      <div class="logo">
        <div class="logo-icon">🚚</div>
        <h1>Stash Logistics</h1>
      </div>

      <nav class="header-nav">
        <ul class="nav-links">
          <li><a href="#" class="active">Marketplace</a></li>
          <li><a href="user-dashboard.html">Dashboard</a></li>
          <li><a href="#">Track Order</a></li>
          <li><a href="#">Support</a></li>
        </ul>
      </nav>

      <div class="header-actions">
        <button class="btn btn-outline">Sign In</button>
        <button class="btn btn-primary">Get Started</button>
      </div>

      <button class="mobile-menu-btn">
        <i class="fas fa-bars"></i>
      </button>
    </div>
  </header>

  <!-- Hero Section -->
  <section class="hero">
    <div class="hero-container">
      <h1>Find Perfect Logistics Solutions</h1>
      <p>Compare prices, read reviews, and book trusted logistics providers in your area</p>
      
      <div class="search-bar">
        <input type="text" class="search-input" placeholder="Search by location, service type, or provider...">
        <button class="search-btn">
          <i class="fas fa-search"></i> Search
        </button>
      </div>
    </div>
  </section>

  <!-- Filters Section -->
  <section class="filters-section">
    <div class="filters-container">
      <div class="filters-grid">
        <div class="filter-group">
          <label class="filter-label">Service Type</label>
          <select class="filter-select" id="serviceType">
            <option value="">All Services</option>
            <option value="bike">Bike Courier</option>
            <option value="mini-truck">Mini Truck</option>
            <option value="three-wheeler">3-Wheeler</option>
            <option value="pickup-truck">Pickup Truck</option>
          </select>
        </div>
        
        <div class="filter-group">
          <label class="filter-label">Location</label>
          <select class="filter-select" id="location">
            <option value="">All Areas</option>
            <option value="koramangala">Koramangala</option>
            <option value="indiranagar">Indiranagar</option>
            <option value="whitefield">Whitefield</option>
            <option value="electronic-city">Electronic City</option>
          </select>
        </div>
        
        <div class="filter-group">
          <label class="filter-label">Price Range</label>
          <select class="filter-select" id="priceRange">
            <option value="">Any Price</option>
            <option value="0-100">₹0 - ₹100</option>
            <option value="100-300">₹100 - ₹300</option>
            <option value="300-500">₹300 - ₹500</option>
            <option value="500+">₹500+</option>
          </select>
        </div>
        
        <div class="filter-group">
          <label class="filter-label">Rating</label>
          <select class="filter-select" id="rating">
            <option value="">Any Rating</option>
            <option value="4.5+">4.5+ Stars</option>
            <option value="4.0+">4.0+ Stars</option>
            <option value="3.5+">3.5+ Stars</option>
          </select>
        </div>
      </div>
      
      <div class="active-filters" id="activeFilters">
        <!-- Active filters will be displayed here -->
      </div>
    </div>
  </section>

  <!-- Quick Quote Section -->
  <section class="services-container">
    <div class="quick-quote">
      <h3 style="margin-bottom: 1rem; color: var(--porter-dark);">Get Instant Quote</h3>
      <form class="quote-form">
        <div class="form-group">
          <label class="form-label">From</label>
          <input type="text" class="form-input" placeholder="Pickup location">
        </div>
        <div class="form-group">
          <label class="form-label">To</label>
          <input type="text" class="form-input" placeholder="Drop-off location">
        </div>
        <div class="form-group">
          <label class="form-label">Weight</label>
          <input type="number" class="form-input" placeholder="Package weight">
        </div>
        <div class="form-group">
          <label class="form-label">Service</label>
          <select class="form-input">
            <option>Select service type</option>
            <option>Bike Courier</option>
            <option>Mini Truck</option>
            <option>3-Wheeler</option>
            <option>Pickup Truck</option>
          </select>
        </div>
        <div class="form-group" style="align-self: end;">
          <button type="button" class="btn btn-primary" onclick="getQuote()">Get Quote</button>
        </div>
      </form>
    </div>
  </section>

  <!-- Services Section -->
  <section class="services-section">
    <div class="services-container">
      <div class="section-header">
        <h2 class="section-title">Available Services</h2>
        <div class="sort-dropdown">
          <label>Sort by:</label>
          <select id="sortBy">
            <option value="recommended">Recommended</option>
            <option value="price-low">Price: Low to High</option>
            <option value="price-high">Price: High to Low</option>
            <option value="rating">Highest Rated</option>
            <option value="distance">Nearest First</option>
          </select>
        </div>
      </div>

      <div class="services-grid" id="servicesGrid">
        <!-- Services will be loaded here -->
        <div class="loading" id="loading">
          <div class="spinner"></div>
          <p>Loading available services...</p>
        </div>
      </div>
    </div>
  </section>

  <script>
    // Mock services data
    const servicesData = [
      {
        id: 1,
        name: "Express Bike Delivery",
        provider: "SpeedRush Logistics",
        type: "bike",
        icon: "🏍️",
        rating: 4.9,
        reviews: 156,
        basePrice: 99,
        eta: "15-20 mins",
        capacity: "Up to 15kg",
        distance: "2.1 km away",
        location: "koramangala",
        features: ["Same day delivery", "Real-time tracking", "Insurance included"],
        badge: "Popular",
        description: "Fast and reliable bike courier service for documents and small packages"
      },
      {
        id: 2,
        name: "Mini Truck Service",
        provider: "City Movers Pro",
        type: "mini-truck",
        icon: "🚛",
        rating: 4.8,
        reviews: 234,
        basePrice: 299,
        eta: "30-45 mins",
        capacity: "Up to 600kg",
        distance: "1.8 km away",
        location: "indiranagar",
        features: ["Skilled drivers", "Loading assistance", "Flexible timing"],
        badge: "Verified",
        description: "Professional mini truck service for local goods transportation"
      },
      {
        id: 3,
        name: "3-Wheeler Cargo",
        provider: "Local Transport Co.",
        type: "three-wheeler",
        icon: "🛺",
        rating: 4.7,
        reviews: 89,
        basePrice: 199,
        eta: "25-35 mins",
        capacity: "Up to 350kg",
        distance: "3.2 km away",
        location: "whitefield",
        features: ["Affordable rates", "Local area expert", "Quick pickup"],
        badge: "Budget",
        description: "Cost-effective 3-wheeler service for medium-sized deliveries"
      },
      {
        id: 4,
        name: "Premium Pickup Truck",
        provider: "Elite Logistics",
        type: "pickup-truck",
        icon: "🚚",
        rating: 4.9,
        reviews: 67,
        basePrice: 499,
        eta: "45-60 mins",
        capacity: "Up to 1.5 tons",
        distance: "4.1 km away",
        location: "electronic-city",
        features: ["Premium service", "Trained professionals", "Equipment handling"],
        badge: "Premium",
        description: "High-capacity pickup truck service for large items and bulk goods"
      },
      {
        id: 5,
        name: "Quick Courier",
        provider: "FastTrack Delivery",
        type: "bike",
        icon: "🏍️",
        rating: 4.6,
        reviews: 198,
        basePrice: 79,
        eta: "10-15 mins",
        capacity: "Up to 10kg",
        distance: "1.2 km away",
        location: "koramangala",
        features: ["Ultra fast", "Document safe", "24/7 available"],
        badge: "Fastest",
        description: "Ultra-fast courier service for urgent deliveries and documents"
      },
      {
        id: 6,
        name: "Reliable Mini Truck",
        provider: "Trusty Transport",
        type: "mini-truck",
        icon: "🚛",
        rating: 4.8,
        reviews: 145,
        basePrice: 279,
        eta: "25-40 mins",
        capacity: "Up to 500kg",
        distance: "2.7 km away",
        location: "indiranagar",
        features: ["Reliable service", "GPS tracking", "Damage protection"],
        badge: "Trusted",
        description: "Dependable mini truck service with excellent track record"
      }
    ];

    let filteredServices = [...servicesData];
    let activeFilters = {};

    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
      setTimeout(() => {
        loadServices();
      }, 1000);

      // Add event listeners for filters
      document.getElementById('serviceType').addEventListener('change', applyFilters);
      document.getElementById('location').addEventListener('change', applyFilters);
      document.getElementById('priceRange').addEventListener('change', applyFilters);
      document.getElementById('rating').addEventListener('change', applyFilters);
      document.getElementById('sortBy').addEventListener('change', sortServices);
    });

    function loadServices() {
      const grid = document.getElementById('servicesGrid');
      const loading = document.getElementById('loading');
      
      loading.style.display = 'none';
      grid.innerHTML = '';

      filteredServices.forEach(service => {
        const serviceCard = createServiceCard(service);
        grid.appendChild(serviceCard);
      });
    }

    function createServiceCard(service) {
      const card = document.createElement('div');
      card.className = 'service-card fade-in';
      
      card.innerHTML = `
        <div class="service-badge">${service.badge}</div>
        
        <div class="service-header">
          <div class="service-icon">${service.icon}</div>
          <div class="service-info">
            <h3>${service.name}</h3>
            <div class="service-provider">by ${service.provider}</div>
            <div class="service-rating">
              <div class="stars">
                ${'★'.repeat(Math.floor(service.rating))}${'☆'.repeat(5 - Math.floor(service.rating))}
              </div>
              <span class="rating-text">${service.rating} (${service.reviews} reviews)</span>
            </div>
          </div>
        </div>

        <p style="color: var(--porter-gray); font-size: 0.9rem; margin-bottom: 1rem;">${service.description}</p>

        <div class="service-details">
          <div class="detail-row">
            <span class="detail-label">Capacity:</span>
            <span class="detail-value">${service.capacity}</span>
          </div>
          <div class="detail-row">
            <span class="detail-label">ETA:</span>
            <span class="detail-value">${service.eta}</span>
          </div>
          <div class="detail-row">
            <span class="detail-label">Distance:</span>
            <span class="detail-value">${service.distance}</span>
          </div>
        </div>

        <div class="service-features">
          <div class="features-list">
            ${service.features.map(feature => `<span class="feature-tag">${feature}</span>`).join('')}
          </div>
        </div>

        <div class="service-pricing">
          <div class="price-info">
            <div class="price">₹${service.basePrice}</div>
            <div class="price-note">Starting from</div>
          </div>
        </div>

        <div class="service-actions">
          <button class="btn btn-primary btn-sm" onclick="bookService(${service.id})">
            <i class="fas fa-truck"></i>
            Book Now
          </button>
          <button class="btn btn-outline btn-sm" onclick="getQuote(${service.id})">
            <i class="fas fa-calculator"></i>
            Get Quote
          </button>
          <button class="btn btn-outline btn-sm" onclick="contactProvider(${service.id})">
            <i class="fas fa-message"></i>
            Contact
          </button>
        </div>
      `;

      return card;
    }

    function applyFilters() {
      const serviceType = document.getElementById('serviceType').value;
      const location = document.getElementById('location').value;
      const priceRange = document.getElementById('priceRange').value;
      const rating = document.getElementById('rating').value;

      // Update active filters
      activeFilters = {
        serviceType,
        location,
        priceRange,
        rating
      };

      // Filter services
      filteredServices = servicesData.filter(service => {
        let matches = true;

        if (serviceType && service.type !== serviceType) matches = false;
        if (location && service.location !== location) matches = false;
        if (rating && service.rating < parseFloat(rating.replace('+', ''))) matches = false;
        
        if (priceRange) {
          const [min, max] = priceRange.split('-').map(p => parseInt(p.replace('+', '')) || Infinity);
          if (service.basePrice < min || (max !== Infinity && service.basePrice > max)) matches = false;
        }

        return matches;
      });

      updateActiveFilters();
      loadServices();
    }

    function updateActiveFilters() {
      const container = document.getElementById('activeFilters');
      container.innerHTML = '';

      Object.entries(activeFilters).forEach(([key, value]) => {
        if (value) {
          const tag = document.createElement('div');
          tag.className = 'filter-tag';
          tag.innerHTML = `
            ${getFilterLabel(key, value)}
            <span class="remove" onclick="removeFilter('${key}')">&times;</span>
          `;
          container.appendChild(tag);
        }
      });
    }

    function getFilterLabel(key, value) {
      const labels = {
        serviceType: {
          'bike': 'Bike Courier',
          'mini-truck': 'Mini Truck',
          'three-wheeler': '3-Wheeler',
          'pickup-truck': 'Pickup Truck'
        },
        location: {
          'koramangala': 'Koramangala',
          'indiranagar': 'Indiranagar',
          'whitefield': 'Whitefield',
          'electronic-city': 'Electronic City'
        }
      };

      return labels[key]?.[value] || value;
    }

    function removeFilter(key) {
      document.getElementById(key).value = '';
      applyFilters();
    }

    function sortServices() {
      const sortBy = document.getElementById('sortBy').value;

      filteredServices.sort((a, b) => {
        switch (sortBy) {
          case 'price-low':
            return a.basePrice - b.basePrice;
          case 'price-high':
            return b.basePrice - a.basePrice;
          case 'rating':
            return b.rating - a.rating;
          case 'distance':
            return parseFloat(a.distance) - parseFloat(b.distance);
          default:
            return 0;
        }
      });

      loadServices();
    }

    function bookService(serviceId) {
      const service = servicesData.find(s => s.id === serviceId);
      alert(`Booking ${service.name} by ${service.provider}!\n\nYou will be redirected to the booking page.`);
      // In a real app, redirect to booking page
      window.location.href = 'user-dashboard.html';
    }

    function getQuote(serviceId = null) {
      if (serviceId) {
        const service = servicesData.find(s => s.id === serviceId);
        alert(`Getting detailed quote for ${service.name}...\n\nBase price: ₹${service.basePrice}\nFinal price depends on distance and package details.`);
      } else {
        alert('Please fill in the pickup and drop-off locations to get an accurate quote.');
      }
    }

    function contactProvider(serviceId) {
      const service = servicesData.find(s => s.id === serviceId);
      alert(`Contacting ${service.provider}...\n\nYou can reach them at:\nPhone: +91-9876543210\nEmail: contact@${service.provider.toLowerCase().replace(/\s+/g, '')}.com`);
    }
  </script>
</body>
</html>
